apiVersion: apps/v1
kind: Deployment
metadata:
  name: "openg2p-dedup"
  labels:
    app: openg2p-dedup
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openg2p-dedup
  template:
    metadata:
      labels:
        app: openg2p-dedup
      annotations:
        deployTime: "{{ .Values.deployTime }}"
    spec:
      # imagePullSecrets:
      # - name: regcred
      containers:
        - name: openg2p-searchservice
          image: {{ .Values.openg2p_dedup_searchservice.image }}
          ports:
            - containerPort: 5000
          env:
            - name: "SEARCHSERVICE_ELASTIC_ENDPOINT"
              value: "{{ .Values.openg2p_dedup_searchservice.SEARCHSERVICE_ELASTIC_ENDPOINT }}"

      # volumes:
      #   - name: ph-ee-config
      #     configMap:
      #       name: ph-ee-config

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: openg2p-dedup
  # annotations:
  #   kubernetes.io/ingress.class: azure/application-gateway
spec:
  rules:
    - host: "{{ .Values.openg2p_dedup_ingress.hostname }}"
      http:
        paths:
        - backend:
            serviceName: openg2p-dedup
            servicePort: 80

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: openg2p-dedup
  name: openg2p-dedup
spec:
  ports:
    - name: port
      port: 80
      protocol: TCP
      targetPort: 9200
  selector:
    app: openg2p-dedup
  sessionAffinity: None
  type: ClusterIP
